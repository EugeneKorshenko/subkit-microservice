#!/usr/bin/env node
//ssh -2 -i subkit.pem ubuntu@ec2-54-228-188-160.eu-west-1.compute.amazonaws.com

var fs = require('fs')
	,program = require('commander')
  ,AWS = require('aws-sdk')
	,util = require('util')
	,events = require('events')
  ,$p = require('procstreams');

AWS.config.loadFromPath(__dirname + '/awsoptions.json');
var ec2 = new AWS.EC2.Client(),
    dns = new AWS.Route53.Client();

function saveServerConfig(){
  fs.writeFileSync("./server.json", JSON.stringify(options), 'utf8', function (err) {
    if (err) throw err;
  });
}

function createDNSEntry(){
  var resources = require("./resources.json"),
      serverConfig = require("./server.json"),
      zoneInfo = {
        HostedZoneId: serverConfig.dnsZoneId,
        ChangeBatch: { Changes: [] }
      };

  for(var index in resources){
    var resource = resources[index],
        hostName = resource.host + "." + serverConfig.proxyDomain + ".";

    zoneInfo.ChangeBatch.Changes.push({
      Action: "CREATE",
      ResourceRecordSet: {
        ResourceRecords: [{
          Value: serverConfig.ip
        }],
        Name: hostName,
        Type: "A",
        TTL: 300,
      }
    });
  }

  dns.changeResourceRecordSets(zoneInfo, function(err, result){
    if(err !== null) return complete(error);
    complete("created");
  });
}

var version = JSON.parse(fs.readFileSync(__dirname + '/../package.json', 'utf8')).version;
program
  .version(version)
  .usage('[options] <url>')
  .option('-v, --version', 'show current version')
  .option('-l, --listen <port>', 'listen on port')
  .option('-c, --connect <url>', 'connect to a websocket server')
  .option('-p, --protocol <version>', 'optional protocol version')
  .option('-o, --origin <origin>', 'optional origin')
  .option('--host <host>', 'optional host')
  .option('-s, --subprotocol <protocol>', 'optional subprotocol')
  .parse(process.argv);

if (program.listen && program.connect) {
	process.exit(-1);
}
else if (program.listen) {
	wsConsole.pause();
}
else {
	process.exit(-1);
}