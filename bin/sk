#!/usr/bin/env node

var fs = require('fs')
	,program = require('commander')
	,util = require('util')
	,events = require('events')
	,readline = require('readline');

function Console() {
  this.stdin = process.stdin;
  this.stdout = process.stdout;

  this.readlineInterface = readline.createInterface(this.stdin, this.stdout);

  var self = this;
  this.readlineInterface.on('line', function(data) {
    self.emit('line', data);
  });
  this.readlineInterface.on('close', function() {
    self.emit('close');
  });

  this._resetInput = function() {
    self.clear();
  }
}
util.inherits(Console, events.EventEmitter);

Console.Colors = {
  Red: '\033[31m',
  Green: '\033[32m',
  Yellow: '\033[33m',
  Blue: '\033[34m',
  Default: '\033[39m'
};

Console.prototype.prompt = function() {
  this.readlineInterface.prompt();
}

Console.prototype.print = function(msg, color) {
  this.clear();
  color = color || Console.Colors.Default;
  this.stdout.write(color + msg + Console.Colors.Default + '\n');
  this.prompt();
}

Console.prototype.clear = function() {
  this.stdout.write('\033[2K\033[E');
}

Console.prototype.pause = function() {
  this.stdin.on('keypress', this._resetInput);
}

Console.prototype.resume = function() {
  this.stdin.removeListener('keypress', this._resetInput);
}

var version = JSON.parse(fs.readFileSync(__dirname + '/../package.json', 'utf8')).version;
program
  .version(version)
  .usage('[options] <url>')
  .option('-v, --version', 'show current version')
  .option('-l, --listen <port>', 'listen on port')
  .option('-c, --connect <url>', 'connect to a websocket server')
  .option('-p, --protocol <version>', 'optional protocol version')
  .option('-o, --origin <origin>', 'optional origin')
  .option('--host <host>', 'optional host')
  .option('-s, --subprotocol <protocol>', 'optional subprotocol')
  .parse(process.argv);

if (program.listen && program.connect) {
	console.error('\033[33merror: use either --listen or --connect\033[39m');
	process.exit(-1);
}
else if (program.listen) {
	var wsConsole = new Console();
	wsConsole.pause();
}
else {
	console.error('\033[33merror: use either --listen or --connect\033[39m');
	process.exit(-1);
}